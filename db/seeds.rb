User.create(name: "Maria", email: 'maria@sistemadefrete.com.br', password:'password', admin: true)
User.create(name: 'João',  email: 'joao@sistemadefrete.com.br',  password: 'password')

moto_transport_type  = TransportType.create(name: 'Motocicleta',  min_distance: 2,  max_distance: 30, min_weight: 0, max_weight: 10,  fixed_rate: 1000, active: true)
carro_transport_type = TransportType.create(name: 'Carro grande', min_distance: 10, max_distance: 100, min_weight: 5, max_weight: 150, fixed_rate: 2000, active: true)
bike_transport_type  = TransportType.create(name: 'Bicicleta',    min_distance: 0,  max_distance: 15, min_weight: 0, max_weight: 8,   fixed_rate: 500,  active: true)

PricePerDistance.create(start_distance: 0,  end_distance: 10, rate: 500,   transport_type: moto_transport_type)
PricePerDistance.create(start_distance: 11, end_distance: 20, rate: 800,   transport_type: moto_transport_type)
PricePerDistance.create(start_distance: 21, end_distance: 30, rate: 900,   transport_type: moto_transport_type)
PricePerDistance.create(start_distance: 10, end_distance: 50, rate: 900,   transport_type: carro_transport_type)
PricePerDistance.create(start_distance: 51, end_distance: 80, rate: 950, transport_type: carro_transport_type)
PricePerDistance.create(start_distance: 81, end_distance: 100, rate: 100,  transport_type: carro_transport_type)
PricePerDistance.create(start_distance: 0,  end_distance: 5,  rate: 250, transport_type: bike_transport_type)
PricePerDistance.create(start_distance: 6,  end_distance: 15, rate: 350, transport_type: bike_transport_type)

PricePerWeight.create(start_weight: 0,   end_weight: 5,  value_per_distance: 50,  transport_type: moto_transport_type)
PricePerWeight.create(start_weight: 6,  end_weight: 10,  value_per_distance: 75, transport_type: moto_transport_type)
PricePerWeight.create(start_weight: 5,   end_weight: 15,  value_per_distance: 75, transport_type: carro_transport_type)
PricePerWeight.create(start_weight: 16,  end_weight: 30,  value_per_distance: 100,    transport_type: carro_transport_type)
PricePerWeight.create(start_weight: 31,  end_weight: 50,  value_per_distance: 120,  transport_type: carro_transport_type)
PricePerWeight.create(start_weight: 51,  end_weight: 99,  value_per_distance: 150,  transport_type: carro_transport_type)
PricePerWeight.create(start_weight: 100, end_weight: 150, value_per_distance: 200,  transport_type: carro_transport_type)
PricePerWeight.create(start_weight: 0,   end_weight: 4,   value_per_distance: 80, transport_type: bike_transport_type)
PricePerWeight.create(start_weight: 5,   end_weight: 8,   value_per_distance: 100,    transport_type: bike_transport_type)

ArrivalTimeConfig.create(start_distance: 0,  end_distance: 10, hours: 8,  transport_type: moto_transport_type)
ArrivalTimeConfig.create(start_distance: 11, end_distance: 20, hours: 12, transport_type: moto_transport_type)
ArrivalTimeConfig.create(start_distance: 21, end_distance: 30, hours: 24, transport_type: moto_transport_type)
ArrivalTimeConfig.create(start_distance: 10, end_distance: 20, hours: 12, transport_type: carro_transport_type)
ArrivalTimeConfig.create(start_distance: 21, end_distance: 30, hours: 16, transport_type: carro_transport_type)
ArrivalTimeConfig.create(start_distance: 31, end_distance: 40, hours: 24, transport_type: carro_transport_type)
ArrivalTimeConfig.create(start_distance: 41, end_distance: 100, hours: 48, transport_type: carro_transport_type)
ArrivalTimeConfig.create(start_distance: 0,  end_distance: 7,  hours: 12, transport_type: bike_transport_type)
ArrivalTimeConfig.create(start_distance: 8,  end_distance: 15, hours: 16, transport_type: bike_transport_type)

Vehicle.create(plate: 'XYZ-189', brand:'Honda', model: 'CG-150', status: 0, max_weight: 20, fabrication_year: 2018, transport_type: moto_transport_type)
Vehicle.create(plate: 'ABC-159', brand:'Honda', model: 'XRE',    status: 0, max_weight: 20, fabrication_year: 2020, transport_type: moto_transport_type)
Vehicle.create(plate: 'HHH-654', brand:'Honda', model: 'CG-150', status: 0, max_weight: 20, fabrication_year: 2018, transport_type: moto_transport_type)

Vehicle.create(plate: 'XYZ-123', brand:'Chevrolet', model: 'S-10',    status: 0, max_weight: 120, fabrication_year: 2015, transport_type: carro_transport_type)
Vehicle.create(plate: 'XAD-153', brand:'Chevrolet', model: 'Colina',  status: 0, max_weight: 100, fabrication_year: 2015, transport_type: carro_transport_type)
Vehicle.create(plate: 'STZ-193', brand:'Chevrolet', model: 'Tracker', status: 0, max_weight: 150, fabrication_year: 2019, transport_type: carro_transport_type)

Vehicle.create(plate: 'ARO26', brand: 'Maori', model: 'Houston',   status: 0, max_weight: 8, fabrication_year: 2019, transport_type: bike_transport_type)
Vehicle.create(plate: 'ARO28', brand: 'CaloiKing', model: 'Caloi', status: 0, max_weight: 8, fabrication_year: 2019, transport_type: bike_transport_type)

ServiceOrder.create(address:'Av. Francisco Sá, 55', sku: 'CAMISETA-589', dimensions: '50cm x 60cm x 30cm', weight: 2 , recipient: 'Maria José', recipient_address: 'Rua das flores, 23', status: 'pending', total_distance: 30)
ServiceOrder.create(address:'Av. Américas, 566', sku: 'ARMARIO-TRAMONTINA', dimensions: '100cm x 160cm x 300cm', weight: 10 , recipient: 'Maria Inês', recipient_address: 'Rua das bromélias, 23', status: 'pending', total_distance: 60)